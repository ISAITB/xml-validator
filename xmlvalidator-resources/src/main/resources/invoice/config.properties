# Comma separated list of features to have enabled. Possible values are:
# - form: Web upload form.
# - email: Validation through email.
# - webservice: Validation through web service.
# Default is form and webservice
validator.channels=form,webservice
#
# Custom application properties
#
# A comma-separated list of supported invoice types. Values need to be reflected in properties validator.typeLabel, validator.schemaFile, validator.schematronFolder.
validator.type = ubl,cii
# Label to display in the web form for a given invoice type (added as a postfix of validator.typeLabel). Only displayed if there are multiple types.
validator.typeLabel.ubl = UBL XML
validator.typeLabel.cii = CII XML
# Title of the web page used for file upload.
validator.uploadTitle = Invoice validator
# The ID of the web service.
validator.webServiceId = InvoiceValidationService
# The description of the web service for element "xml".
validator.webServiceDescription.xml = The XML content representing the invoice to validate.
# The description of the web service for element "type". Only displayed if there are multiple types.
validator.webServiceDescription.type = The type of validation to perform (cii, ubl).
# The XSD files loaded for a given invoice type (added as a postfix). This can be a file or folder (must never start with a '/').
validator.schemaFile.cii = cii/xsd/data/standard/CrossIndustryInvoice_100pD16B.xsd
validator.schemaFile.ubl = ubl/xsds/maindoc/UBL-Invoice-2.1.xsd
# The schematron files loaded for a given invoice type (added as a postfix). This can be a file or folder (must never start with a '/').
validator.schematronFile.cii = cii/schematron/EN16931-CII-validation.sch
validator.schematronFile.ubl = ubl/schematron
# Whether tests should be included in the resulting reports.
validator.includeTestDefinition = true
# Whether the reports are ordered.
validator.reportsOrdered = false
# Properties related to email-based invoice.
validator.mailFrom = Invoice Validator <validate.invoice@gmail.com>
validator.mailAuthEnable = true
validator.mailAuthUsername = validate.invoice@gmail.com
validator.mailAuthPassword = XXXX
validator.mailOutboundHost = smtp.gmail.com
validator.mailOutboundPort = 465
validator.mailOutboundSSLEnable = true
validator.mailInboundHost = imap.gmail.com
validator.mailInboundPort = 993
validator.mailInboundSSLEnable = true
validator.mailInboundFolder = INBOX
