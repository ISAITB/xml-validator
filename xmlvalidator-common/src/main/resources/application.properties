#
# Spring boot application properties
#
# Comma separated list of features to have enabled. Possible values are:
# - form: Web upload form.
# - email: Validation through email.
# - webservice: Validation through web service.
spring.profiles.active=form,webservice,email
# Maximum permitted size for uploaded files.
multipart.maxFileSize = -1
# The context path to register the application under.
server.context-path = /invoice
# Hide the Spring boot favicon.
spring.mvc.favicon.enabled=false
# Hide the Spring boot banner.
spring.main.banner-mode=off
# Logging path.
logging.path=@validator.logPath@
#
# Custom application properties
#
# A comma-separated list of supported validation types. Values need to be reflected in properties validator.typeLabel, validator.schemaFile, validator.schematronFolder.
validator.type = ubl,cii
# Label to display in the web form for a given validation type (added as a postfix of validator.typeLabel). Only displayed if there are multiple types.
validator.typeLabel.ubl = UBL XML
validator.typeLabel.cii = CII XML
# Title of the web page used for file upload.
validator.uploadTitle = Invoice validator
# The ID of the web service.
validator.webServiceId = InvoiceValidationService
# The description of the web service for element "xml".
validator.webServiceDescription.xml = The XML content representing the invoice to validate.
# The description of the web service for element "type". Only displayed if there are multiple types.
validator.webServiceDescription.type = The type of validation to perform (cii, ubl).
# The rate at which the temp reports folder is polled for cleanup (in ms).
validator.cleanupPollingRate = 60000
# The rate at which the configured email address is polled for received input files (in ms).
validator.mailPollingRate = 60000
# The root folder from which validation resource paths are calculated (must always end with a '/').
validator.resourceRoot = @validator.resourceRoot@
# The schematron files loaded for a given validation type (added as a postfix). This can be a file or folder (must never start with a '/').
validator.schematronFile.ubl = @validator.schematronFile.ubl@
validator.schematronFile.cii = @validator.schematronFile.cii@
# The XSD files loaded for a given validation type (added as a postfix). This can be a file or folder (must never start with a '/').
validator.schemaFile.ubl = @validator.schemaFile.ubl@
validator.schemaFile.cii = @validator.schemaFile.cii@
# Report path.
validator.reportFolder = @validator.reportFolder@
# Prefix of input files in the report folder.
validator.inputFilePrefix = ITB-
# Time to keep XML input files in milliseconds (600000 = 10 minutes).
validator.minimumCachedInputFileAge = 600000
# Time to keep report files in milliseconds (600000 = 10 minutes).
validator.minimumCachedReportFileAge = 600000
# Prefix of report files in the report folder.
validator.reportFilePrefix = TAR-
# Accepted mime-types for validation.
validator.acceptedMimeTypes = application/xml, text/xml, text/plain
# Accepted schematron extensions.
validator.acceptedSchematronExtensions = xsl,xslt,sch
# Properties related to email-based validation.
validator.mailFrom = Invoice Validator <validate.invoice@gmail.com>
validator.mailAuthEnable = true
validator.mailAuthUsername = validate.invoice@gmail.com
validator.mailAuthPassword = Admin12345_
validator.mailOutboundHost = smtp.gmail.com
validator.mailOutboundPort = 465
validator.mailOutboundSSLEnable = true
validator.mailInboundHost = imap.gmail.com
validator.mailInboundPort = 993
validator.mailInboundSSLEnable = true
validator.mailInboundFolder = INBOX
